"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[740],{3023:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>a});var n=s(3696);const t={},i=n.createContext(t);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(i.Provider,{value:r},e.children)}},5897:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"operators/merge","title":"merge","description":"The merge operator combines multiple reactive sources into a single stream.","source":"@site/docs/operators/merge.md","sourceDirName":"operators","slug":"/operators/merge","permalink":"/signux/docs/operators/merge","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"mapAsync","permalink":"/signux/docs/operators/mapAsync"}}');var t=s(2540),i=s(3023);const o={},a="merge",c={},l=[{value:"\u2705 Basic usage",id:"-basic-usage",level:2},{value:"\u2699\ufe0f How it works",id:"\ufe0f-how-it-works",level:2},{value:"\ud83e\udde9 Use cases",id:"-use-cases",level:2},{value:"\ud83d\udce6 Signature",id:"-signature",level:2}];function d(e){const r={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"merge",children:"merge"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"merge"})," operator combines multiple reactive sources into a single stream."]}),"\n",(0,t.jsx)(r.p,{children:"Every time either source emits, the merged stream emits that value."}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"-basic-usage",children:"\u2705 Basic usage"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { event } from "signux";\r\nimport { merge } from "signux/operators";\r\n\r\nconst a = event<string>();\r\nconst b = event<number>();\r\n\r\nconst mixed = a.pipe(merge(b));\r\n\r\nmixed.subscribe((value) => console.log("Received:", value));\r\n\r\na("hello"); // logs: "Received: hello"\r\nb(42); // logs: "Received: 42"\n'})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"\ufe0f-how-it-works",children:"\u2699\ufe0f How it works"}),"\n",(0,t.jsxs)(r.p,{children:["It listens to both the original source and the ",(0,t.jsx)(r.code,{children:"other"})," subscribable.",(0,t.jsx)(r.br,{}),"\n","Any time either one emits, the value is forwarded to the result."]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"-use-cases",children:"\ud83e\udde9 Use cases"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Combine UI events with external triggers"}),"\n",(0,t.jsx)(r.li,{children:"Unify multiple streams into one"}),"\n",(0,t.jsx)(r.li,{children:'Create global "any change" signals'}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"-signature",children:"\ud83d\udce6 Signature"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"function merge<O>(other: Subscribable<O>): OperatorFn<any, O | any>;\n"})})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);