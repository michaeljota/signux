"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[615],{3023:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(3696);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},9566:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"primitives/computed","title":"Computed","description":"computed(fn: () => T)","source":"@site/docs/primitives/computed.md","sourceDirName":"primitives","slug":"/primitives/computed","permalink":"/signux/docs/primitives/computed","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Event","permalink":"/signux/docs/primitives/event"},"next":{"title":"Effect","permalink":"/signux/docs/primitives/effect"}}');var i=s(2540),r=s(3023);const o={sidebar_position:3},c="Computed",d={},a=[{value:"\u2705 Basic usage",id:"-basic-usage",level:2},{value:"\u2699\ufe0f How it works",id:"\ufe0f-how-it-works",level:2},{value:"\ud83d\udd10 Computed values are read-only",id:"-computed-values-are-read-only",level:2},{value:"\ud83d\udd01 With <code>.pipe(...)</code>",id:"-with-pipe",level:2},{value:"\ud83d\udce6 API",id:"-api",level:2}];function l(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"computed",children:"Computed"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"computed<T>(fn: () => T)"})}),"\n",(0,i.jsxs)(n.p,{children:["Creates a read-only reactive value that is derived from other reactive sources.",(0,i.jsx)(n.br,{}),"\n","The function you pass will automatically track its dependencies."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-basic-usage",children:"\u2705 Basic usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { state, computed } from "signux";\n\nconst count = state(2);\nconst double = computed(() => count() * 2);\n\nconsole.log(double()); // 4\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-how-it-works",children:"\u2699\ufe0f How it works"}),"\n",(0,i.jsxs)(n.p,{children:["The function inside ",(0,i.jsx)(n.code,{children:"computed(...)"})," is re-executed whenever any reactive value it reads changes."]}),"\n",(0,i.jsx)(n.p,{children:"You don't need to declare dependencies \u2014 they are tracked automatically:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const increase = event();\nconst a = state(1)\n  .on(increase, (n) => n + 1)\n  .create();\n\nconst b = state(2);\n\nconst sum = computed(() => a() + b());\n\nconsole.log(sum()); // 3\n\nincrease();\n\nconsole.log(sum()); // 4\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-computed-values-are-read-only",children:"\ud83d\udd10 Computed values are read-only"}),"\n",(0,i.jsxs)(n.p,{children:["You cannot add reactions to a ",(0,i.jsx)(n.code,{children:"computed"})," directly \u2014 it is always derived from other state:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const total = computed(() => count() * 100);\n// total.on(...) \u274c not allowed\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"-with-pipe",children:["\ud83d\udd01 With ",(0,i.jsx)(n.code,{children:".pipe(...)"})]}),"\n",(0,i.jsx)(n.p,{children:"Like other reactive primitives, you can transform computed values:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const normalized = double.pipe(map((n) => Math.floor(n / 10)));\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-api",children:"\ud83d\udce6 API"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"ComputedState<T>"})," exposes:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"(): T"})," \u2192 get the current derived value"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"subscribe(fn)"})," \u2192 listen to changes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".pipe(...operators)"})," \u2192 create derived reactive streams"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);